openapi: 3.0.0
info:
  version: "latest"
  title: PROG3 - TD2
paths:
  /matchs:
    get:
      tags:
        - Matchs
      summary: get all matchs
      operationId: getMatchs
      responses:
        '200':
          description: List of matchs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
        '500':
          description: Internal server error
    post:
      tags:
        - Matchs
      summary: create new matchs
      operationId: createMatchs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMatch'
      responses:
        '200':
          description: List of created books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
        '500':
          description: Internal server error
    put:
      tags:
        - Matchs
      summary: update some matchs
      operationId: updateMatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        '200':
          description: List of updated match
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
        '500':
          description: Internal server error
  /match/{match_id}:
    delete:
      tags:
        - Matchs
      summary: delete a specific match
      operationId: deleteMatch
      parameters:
        - in: path
          name: match_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Return the deleted match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        '500':
          description: Internal server error
  /teams:
    get:
      tags:
        - Teams
      summary: get all teams
      operationId: getTeams
      responses:
        '200':
          description: List of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      tags:
        - Teams
      summary: create some teams
      operationId: createTeams
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateTeam'
      responses:
        '200':
          description: List of created Teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        '500':
          description: Internal server error
    put:
      tags:
        - Teams
      summary: Update some teams
      operationId: updateTeam
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: List of updated Teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        '500':
          description: Internal server error
  /players:
    get:
      tags:
        - Players
      summary: get all players
      operationId: getPlayers
      responses:
        '200':
          description: List of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        '500':
          description: Internal server error
    post:
      tags:
        - Players
      summary: create new players
      operationId: createPlayers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreatePlayer'
      responses:
        '200':
          description: List of created players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        '500':
          description: Internal server error
    put:
      tags:
        - Players
      summary: update some player
      operationId: updatePlayer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdatePlayers'
      responses:
        '200':
          description: List of updated authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        '500':
          description: Internal server error
  /players/{player_id}:
    delete:
      tags:
        - Players
      summary: delete a specific player
      operationId: deletePlayer
      parameters:
        - in: path
          name: player_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Return the deleted player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '403':
          description: Not found
components:
  schemas:
    Sponsor:
      type: object
      properties:
        idSponsor:
          type: number
        name:
          type: string
    CreateTeam:
      type: object
      properties:
        name:
          type: string
    Team:
      type: object
      properties:
        idTeam:
          type: number
        name:
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/UpdatePlayers'
        sponsors:
          type: array
          items:
            $ref: '#/components/schemas/Sponsor'
    Match:
      type: object
      properties:
        dateTime:
          type: string
        idMatch:
          type: number
        teamOne:
          items:
            $ref: '#/components/schemas/Team'
        teamTwo:
          items:
            $ref: '#/components/schemas/Team'
    CreateMatch:
      type: object
      properties:
        dateTime:
          type: string
        stadium:
          type: string
        teamOne:
          items:
            $ref: '#/components/schemas/Team'
        teamTwo:
          items:
            $ref: '#/components/schemas/Team'
    Player:
      type: object
      properties:
        idPlayer:
          type: number
        name:
          type: string
    UpdatePlayers:
      type: object
      properties:
        idPlayer:
          type: number
        name:
          type: string
        number:
          type: number
    CreatePlayer:
      type: object
      properties:
        name:
          type: string
    #TODO-7-a: create the appropriate model for category
    # Must know : a category can be used by some books and a book can have some categories
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string